name: build-and-test

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        include:
          # Ubuntu with ROS 2 Humble
          - os: ubuntu-22.04
            rosdistro: humble
          # Ubuntu with ROS 2 Jazzy
          - os: ubuntu-latest
            rosdistro: jazzy
          # macOS with ROS 2 Humble
          - os: macos-latest
            rosdistro: humble
          # macOS with ROS 2 Jazzy
          - os: macos-latest
            rosdistro: jazzy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache APT packages
        if: ${{ runner.os == 'Linux' }}
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: apt-${{ runner.os }}-${{ hashFiles('/etc/apt/sources.list.d/*') }}
          restore-keys: apt-${{ runner.os }}-

      - name: Setup ROS 2 ${{ matrix.rosdistro }}
        if: ${{ runner.os == 'Linux' }}
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.rosdistro }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.rosdistro }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        if: ${{ runner.os == 'Linux' }}
        run: |
          source /opt/ros/${{ matrix.rosdistro }}/setup.bash
          cargo test --verbose

  code-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run rustfmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
